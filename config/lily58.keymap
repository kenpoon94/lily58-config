/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3  &kp N4    &kp N5                           &kp N6  &kp N7         &kp N8     &kp N9   &kp N0    &kp GRAVE
&kp TAB    &kp Q   &kp W   &kp E   &kp R     &kp T                            &kp Y   &kp U          &kp I      &kp O    &kp P     &kp BSLH
&kp LSHFT  &kp A   &kp S   &kp D   &kp F     &kp G                            &kp H   &kp J          &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z   &kp X   &kp C   &kp V     &kp B     &kp LBKT     &kp RBKT  &kp N   &kp M          &kp COMMA  &kp DOT  &kp FSLH  &kp EQUAL
                           &mo 1   &kp LALT  &kp LGUI  &kp SPACE    &kp RET   &mo 2   &kp BACKSPACE  &kp MINUS
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6                     &bt BT_SEL 0  &bt BT_SEL 1  &trans         &trans  &trans  &bt BT_CLR
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12                    &trans        &trans        &trans         &trans  &trans  &trans
&trans  &trans  &trans  &trans   &trans   &trans                     &trans        &kp PAGE_UP   &kp PAGE_DOWN  &trans  &trans  &trans
&trans  &trans  &tog 3  &trans   &trans   &trans   &trans    &trans  &trans        &trans        &trans         &trans  &trans  &trans
                        &trans   &trans   &trans   &trans    &trans  &trans        &trans        &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans    &trans    &trans        &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans    &trans    &trans        &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans        &trans     &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans
            >;
        };

        media_layer {
            bindings = <
&kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_MUTE                    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans            &trans      &trans        &trans           &trans                        &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans            &trans      &trans        &trans           &trans                        &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans            &trans      &trans        &trans           &trans      &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                          &trans        &trans           &trans      &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
